@model IEnumerable<Assignmen2.Models.Product>

@{
    ViewData["Title"] = "Product List";
    var userId = ViewData["UserId"] as string;  // Get the current user's ID from ViewData
}

<h1>Product List</h1>

<div class="row">
    @if (!Model.Any())
    {
        <div class="col-12">
            <p>No products found.</p>
        </div>
    }
    else
    {
        @foreach (var item in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100">
                    <!-- Product Image -->
                    <img class="card-img-top" src="@item.PhotoPath" alt="@item.Name" style="height: 200px; object-fit: cover;">
                    <div class="card-body d-flex flex-column">
                        <!-- Product Title with Details link -->
                        <h5 class="card-title">
                            <a asp-action="Details" asp-route-id="@item.Id" class="text-decoration-none text-primary">
                                @item.Name
                            </a>
                        </h5>
                        <p class="card-text">@item.Price.ToString("C")</p>
                        <p class="card-text">Available: @item.Quantity</p>

                        <div class="mt-auto">
                            <!-- Quantity Input -->
                            <input type="number" min="1" max="@item.Quantity" value="1" id="quantity-@item.Id" class="form-control mb-2" />
                            <!-- Buy Button -->
                            <button class="buy-product btn btn-success btn-block" data-product-id="@item.Id" data-max-quantity="@item.Quantity">
                                Add to Cart
                            </button>
                        </div>
                    </div>
                    <div class="card-footer">
                        <!-- Edit and Delete buttons only for Seller/Admin -->
                        @if (User.IsInRole("Admin") || userId == @item.SellerId)
                        {
                            <a class="btn btn-info btn-sm" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                            <a class="btn btn-danger btn-sm" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        }
                    </div>
                </div>
            </div>
        }
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Handle the Buy button click
            $('.buy-product').click(function () {
                var productId = $(this).data('product-id');
                var maxQuantity = $(this).data('max-quantity');
                var quantity = parseInt($('#quantity-' + productId).val());

                // Validate the quantity before sending the request
                if (quantity > maxQuantity) {
                    alert("You cannot add more than the available quantity.");
                    return;
                }

                // Send an AJAX request to the Buy method in CartController
                $.ajax({
                    url: '@Url.Action("Buy", "Cart")', // Ensure this routes to the CartController Buy action
                    type: 'POST',
                    data: { id: productId, quantity: quantity },
                    success: function (response) {
                        alert("Product added to cart successfully!");
                        // Optionally, refresh the cart display or update the UI
                    },
                    error: function (xhr, status, error) {
                        alert("An error occurred while adding the product to the cart: " + xhr.responseText);
                    }
                });
            });
        });
    </script>
}
